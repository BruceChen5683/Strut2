<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE struts PUBLIC
        "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
        "http://struts.apache.org/dtds/struts-2.0.dtd">
<struts>

    <!--<constant name="struts.devMode" value="false">-->
    <!---->
    <!--</constant>-->

    <!--
    First the Convention plugin finds packages named struts, struts2, action or actions. Any packages that match those names are considered the root packages for the Convention plugin. Next, the plugin looks at all of the classes in those packages as well as sub-packages and determines if the classes implementcom.opensymphony.xwork2.Action or if their name ends with Action (i.e. FooAction).


注意我标红的内容，也就是说，如果要用Struts2的注解，你还非得将action处理类放在struts, struts2, action, actions包或者其子包中。以前总是习惯性的将所有的action处理类放在com.xxx.action下，以为仅仅是习惯而已，没曾想Struts2还就是这么规定的。

-->
    <constant name="struts.convention.package.locators" value="struts, struts2, action, actions,www,xml,json"></constant>

    <package name="struts2login" extends="json-default">


        <interceptors>
            <interceptor name="firstInterceptor" class="com.cjl.www.interceptor.Interceptor1">
                <param name="test">battlecall</param>
            </interceptor>

            <interceptor name="thirdInterceptor" class="com.cjl.www.interceptor.Interceptor3">

            </interceptor>

            <interceptor name="loginInterceptor" class="com.cjl.www.interceptor.LoginInterceptor">

            </interceptor>

            <!--<interceptor-stack name="myInterceptorStack">-->
                <!--<interceptor-ref name="loginInterceptor"></interceptor-ref>-->
                <!--<interceptor-ref name="defaultStack"></interceptor-ref>-->
            <!--</interceptor-stack>-->
        </interceptors>

        <!--<default-interceptor-ref name="myInterceptorStack">-->

        <!--</default-interceptor-ref>-->

        <global-results>
            <result name="usernameInvalid">usernameinvalid.jsp</result>
            <result name="login">/error.jsp</result>
        </global-results>
        <action name="login" class="com.cjl.www.LoginAction" method="myExecute">
            <result name="success">/result.jsp</result>
        </action>

        <action name="userAction" class="com.cjl.www.UserAction">
            <result name="success">/output.jsp</result>
        </action>


        <action name="register" class="com.cjl.www.RegisterAction">
            <result name="success">/registerResult.jsp</result>
            <!--验证不通过或输入错误重新注册-->
            <result name="input">/register.jsp</result>
            <exception-mapping exception="com.cjl.www.exception.NameException" result="usernameInvalid"></exception-mapping>
            <!--<result name="usernameInvalid">usernameinvalid.jsp</result>-->
        </action>

        <action name="register2" class="com.cjl.www.RegisterAction2">
            <result name="success">/registerResult.jsp</result>
        </action>

        <!--<action name="action1" class="com.cjl.www.Action1" method="myExecute">-->
            <!--<result name="success" type="redirectAction">-->
                <!--<param name="actionName">action2</param>-->
                <!--&lt;!&ndash;下面的参数再浏览器请求时发给下一个action&ndash;&gt;-->
                <!--<param name="username">${username}</param>-->
                <!--<param name="password">${password}</param>-->
                <!--<param name="up">${up}</param>-->
            <!--</result>-->

            <!--<interceptor-ref name="firstInterceptor"></interceptor-ref>-->
            <!--<interceptor-ref name="thirdInterceptor">-->
                <!--<param name="includeMethods">execute,myExecute</param>-->
                <!--<param name="excludeMethods"></param>-->
            <!--</interceptor-ref>-->

            <!--&lt;!&ndash;<result name="success" type="chain">&ndash;&gt;-->
                <!--&lt;!&ndash;<param name="actionName">action2</param>&ndash;&gt;-->
            <!--&lt;!&ndash;</result>&ndash;&gt;-->
        <!--</action>-->

        <action name="action2" class="com.cjl.www.Action2">
            <result name="success">/action2.jsp</result>
        </action>


        <action name="token" class="com.cjl.www.TokenAction">
            <result name="success">/tokenSuccess.jsp</result>
            <result name="invalid.token">/tokenFail.jsp</result>

            <interceptor-ref name="token"></interceptor-ref>
            <interceptor-ref name="defaultStack"></interceptor-ref>
        </action>

        <action name="fileUpload" class="com.cjl.www.FileUploadAction">
            <result name="success">/fileUploadResult.jsp</result>
        </action>

        <action name="downloadFile2" class="com.cjl.www.FileDownloadAction2">
            <result name="success" type="stream">
                <param name="contentDisposition">attachment;filename=${fileName}</param>
                <param name="inputName">downloadFile</param>
            </result>
        </action>


        <action name="getJsonAction2" class="com.cjl.www.json.GetJsonAction2">
            <result name="success" type="json">
                <param name="excludeProperties">name</param>
            </result>
        </action>

    </package>

    <package name="hello" extends="struts-default" namespace="/nameSpace">
        <action name="nameSpaceTest" class="com.cjl.www.NameSpaceAction">
            <result name="success">output.jsp</result>
        </action>
    </package>


    <!--<package name="test" extends="struts-default">-->
        <!--<action name="getJsonAction" class="com.cjl.www.json.GetJsonAction">-->

        <!--</action>-->
    <!--</package>-->
</struts>